version: '3.9'
services:

  mysql:
    container_name: mysql
    image: mysql:8.0.31
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: keycloak
    ports:
      - 3316:3306
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ./data/docker-entrypoint-initdb:/docker-entrypoint-initdb.d
    restart: unless-stopped

  keycloak:
    container_name: keycloak-auth
    image: quay.io/keycloak/keycloak:20.0.1
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: mysql
      KC_DB_SCHEMA: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_DB_URL: jdbc:mysql://mysql:3306/keycloak
    ports:
      - 8080:8080
    expose:
      - 8080
    volumes:
      - ./data/keycloak:/opt/keycloak/data/import
    depends_on:
      - mysql
    command: [ "start-dev", "--import-realm" ]
    restart: unless-stopped

  discovery-server:
    image: discovery-server:1.0
    container_name: discovery-server
    ports:
      - 8761:8761
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    restart: unless-stopped

  api-gateway:
    image: api-gateway:1.0
    container_name: api-gateway
    ports:
      - 8079:8080
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=TRACE
    depends_on:
      - discovery-server
      - keycloak
    restart: unless-stopped

  match-service:
    container_name: match-service
    image: match-service:1.0
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mysql
    restart: unless-stopped

  user-service:
    container_name: user-service
    image: user-service:1.0
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - KEYCLOAK_SECRET=xDexo0gzAq3DP6wDt6f96WpMvBAZJzVB
      - KEYCLOAK_PASSWORD=admin
    depends_on:
      - mysql
      - discovery-server
      - api-gateway
    restart: unless-stopped

  bet-service:
    container_name: bet-service
    image: bet-service:1.0
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mysql
      - discovery-server
      - api-gateway
    restart: unless-stopped

  comment-service:
    container_name: comment-service
    image: comment-service:1.0
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mysql
      - discovery-server
      - api-gateway
    restart: unless-stopped

  rate-service:
    container_name: rate-service
    image: rate-service:1.0
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mysql
      - discovery-server
      - api-gateway
    restart: unless-stopped
