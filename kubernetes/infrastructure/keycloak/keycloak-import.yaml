apiVersion: v1
kind: ConfigMap
metadata:
  name: betting-app-realm-import
data:
  betting-app-realm.json: |
    {
      "id" : "59928225-ea63-495d-8997-be4b23922969",
      "realm" : "betting-app",
      "displayName" : "Esport Betting App",
      "displayNameHtml" : "",
      "notBefore" : 0,
      "defaultSignatureAlgorithm" : "RS256",
      "revokeRefreshToken" : false,
      "refreshTokenMaxReuse" : 0,
      "accessTokenLifespan" : 300,
      "accessTokenLifespanForImplicitFlow" : 900,
      "ssoSessionIdleTimeout" : 1800,
      "ssoSessionMaxLifespan" : 36000,
      "ssoSessionIdleTimeoutRememberMe" : 0,
      "ssoSessionMaxLifespanRememberMe" : 0,
      "offlineSessionIdleTimeout" : 2592000,
      "offlineSessionMaxLifespanEnabled" : false,
      "offlineSessionMaxLifespan" : 5184000,
      "clientSessionIdleTimeout" : 0,
      "clientSessionMaxLifespan" : 0,
      "clientOfflineSessionIdleTimeout" : 0,
      "clientOfflineSessionMaxLifespan" : 0,
      "accessCodeLifespan" : 60,
      "accessCodeLifespanUserAction" : 300,
      "accessCodeLifespanLogin" : 1800,
      "actionTokenGeneratedByAdminLifespan" : 43200,
      "actionTokenGeneratedByUserLifespan" : 300,
      "oauth2DeviceCodeLifespan" : 600,
      "oauth2DevicePollingInterval" : 5,
      "enabled" : true,
      "sslRequired" : "external",
      "registrationAllowed" : true,
      "registrationEmailAsUsername" : false,
      "rememberMe" : false,
      "verifyEmail" : false,
      "loginWithEmailAllowed" : true,
      "duplicateEmailsAllowed" : false,
      "resetPasswordAllowed" : false,
      "editUsernameAllowed" : false,
      "bruteForceProtected" : false,
      "permanentLockout" : false,
      "maxFailureWaitSeconds" : 900,
      "minimumQuickLoginWaitSeconds" : 60,
      "waitIncrementSeconds" : 60,
      "quickLoginCheckMilliSeconds" : 1000,
      "maxDeltaTimeSeconds" : 43200,
      "failureFactor" : 30,
      "roles" : {
        "realm" : [ {
          "id" : "2664755b-bf6b-46ed-bda2-cf29726d6b8e",
          "name" : "USER",
          "description" : "Default user privileges",
          "composite" : false,
          "clientRole" : false,
          "containerId" : "59928225-ea63-495d-8997-be4b23922969",
          "attributes" : { }
        }, {
          "id" : "17cd5cca-64b4-4248-a101-62c7d327db2d",
          "name" : "offline_access",
          "description" : "${role_offline-access}",
          "composite" : false,
          "clientRole" : false,
          "containerId" : "59928225-ea63-495d-8997-be4b23922969",
          "attributes" : { }
        }, {
          "id" : "ddee7bb3-b73f-453e-8bc5-e6b291b50e1f",
          "name" : "default-roles-betting-api",
          "description" : "${role_default-roles}",
          "composite" : true,
          "composites" : {
            "realm" : [ "offline_access", "uma_authorization", "USER" ],
            "client" : {
              "account" : [ "view-profile", "manage-account" ]
            }
          },
          "clientRole" : false,
          "containerId" : "59928225-ea63-495d-8997-be4b23922969",
          "attributes" : { }
        }, {
          "id" : "a4b08181-b289-4801-b319-b2af78f0fa64",
          "name" : "ADMIN",
          "description" : "Admin privileges",
          "composite" : false,
          "clientRole" : false,
          "containerId" : "59928225-ea63-495d-8997-be4b23922969",
          "attributes" : { }
        }, {
          "id" : "2bd6856f-6866-483f-9c96-c6bb39ee9954",
          "name" : "uma_authorization",
          "description" : "${role_uma_authorization}",
          "composite" : false,
          "clientRole" : false,
          "containerId" : "59928225-ea63-495d-8997-be4b23922969",
          "attributes" : { }
        } ],
        "client" : {
          "realm-management" : [ {
            "id" : "a8752709-062c-433b-a3d3-5388209915bd",
            "name" : "realm-admin",
            "description" : "${role_realm-admin}",
            "composite" : true,
            "composites" : {
              "client" : {
                "realm-management" : [ "manage-users", "impersonation", "query-clients", "query-groups", "manage-realm", "view-identity-providers", "view-users", "query-realms", "manage-clients", "manage-authorization", "manage-identity-providers", "create-client", "view-realm", "view-authorization", "view-events", "query-users", "manage-events", "view-clients" ]
              }
            },
            "clientRole" : true,
            "containerId" : "7bb33dcf-6428-4464-8a42-13682bd0834e",
            "attributes" : { }
          }, {
            "id" : "a5399a53-1117-470b-9142-d1a034eb4c16",
            "name" : "impersonation",
            "description" : "${role_impersonation}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "7bb33dcf-6428-4464-8a42-13682bd0834e",
            "attributes" : { }
          }, {
            "id" : "4cc0a8a2-86b3-42bc-9182-7d7c9ca5afde",
            "name" : "manage-users",
            "description" : "${role_manage-users}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "7bb33dcf-6428-4464-8a42-13682bd0834e",
            "attributes" : { }
          }, {
            "id" : "e4aee456-e187-48a7-909f-6866316c19eb",
            "name" : "query-clients",
            "description" : "${role_query-clients}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "7bb33dcf-6428-4464-8a42-13682bd0834e",
            "attributes" : { }
          }, {
            "id" : "cddafa75-c019-47b7-a294-030583af2e17",
            "name" : "manage-realm",
            "description" : "${role_manage-realm}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "7bb33dcf-6428-4464-8a42-13682bd0834e",
            "attributes" : { }
          }, {
            "id" : "520c3861-b862-489d-ab59-230f6f7a230e",
            "name" : "query-groups",
            "description" : "${role_query-groups}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "7bb33dcf-6428-4464-8a42-13682bd0834e",
            "attributes" : { }
          }, {
            "id" : "58d97941-6440-4708-9a67-8beedbbedac9",
            "name" : "view-identity-providers",
            "description" : "${role_view-identity-providers}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "7bb33dcf-6428-4464-8a42-13682bd0834e",
            "attributes" : { }
          }, {
            "id" : "12c57258-1eb3-4d7c-b705-952351455e36",
            "name" : "view-users",
            "description" : "${role_view-users}",
            "composite" : true,
            "composites" : {
              "client" : {
                "realm-management" : [ "query-groups", "query-users" ]
              }
            },
            "clientRole" : true,
            "containerId" : "7bb33dcf-6428-4464-8a42-13682bd0834e",
            "attributes" : { }
          }, {
            "id" : "bc9b675d-795d-4179-9ece-ca7d517638a2",
            "name" : "query-realms",
            "description" : "${role_query-realms}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "7bb33dcf-6428-4464-8a42-13682bd0834e",
            "attributes" : { }
          }, {
            "id" : "4492bb76-1a85-4426-a76e-adbf68ee04dc",
            "name" : "manage-clients",
            "description" : "${role_manage-clients}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "7bb33dcf-6428-4464-8a42-13682bd0834e",
            "attributes" : { }
          }, {
            "id" : "caed60be-2c26-4c5e-82e8-889aa4ddb897",
            "name" : "manage-authorization",
            "description" : "${role_manage-authorization}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "7bb33dcf-6428-4464-8a42-13682bd0834e",
            "attributes" : { }
          }, {
            "id" : "6ea1cc26-df0f-4eb4-a02e-0e352879dc7d",
            "name" : "manage-identity-providers",
            "description" : "${role_manage-identity-providers}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "7bb33dcf-6428-4464-8a42-13682bd0834e",
            "attributes" : { }
          }, {
            "id" : "095bec12-9a89-493a-a507-429584d93662",
            "name" : "create-client",
            "description" : "${role_create-client}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "7bb33dcf-6428-4464-8a42-13682bd0834e",
            "attributes" : { }
          }, {
            "id" : "9836cb74-3ddc-4ed6-b5ff-5d82f2c36864",
            "name" : "view-authorization",
            "description" : "${role_view-authorization}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "7bb33dcf-6428-4464-8a42-13682bd0834e",
            "attributes" : { }
          }, {
            "id" : "2a36ec14-bcda-483a-b691-1658830e33d6",
            "name" : "view-realm",
            "description" : "${role_view-realm}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "7bb33dcf-6428-4464-8a42-13682bd0834e",
            "attributes" : { }
          }, {
            "id" : "ffc3cc07-77f5-49f4-b6de-08af87efecec",
            "name" : "view-events",
            "description" : "${role_view-events}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "7bb33dcf-6428-4464-8a42-13682bd0834e",
            "attributes" : { }
          }, {
            "id" : "70eaafff-cd7d-4ca5-9551-6780c18e3479",
            "name" : "manage-events",
            "description" : "${role_manage-events}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "7bb33dcf-6428-4464-8a42-13682bd0834e",
            "attributes" : { }
          }, {
            "id" : "657fe5b0-a5e7-4c58-bff2-b818db7c9be5",
            "name" : "query-users",
            "description" : "${role_query-users}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "7bb33dcf-6428-4464-8a42-13682bd0834e",
            "attributes" : { }
          }, {
            "id" : "e03d7aa2-2af4-464a-8e25-52f9c71cd9be",
            "name" : "view-clients",
            "description" : "${role_view-clients}",
            "composite" : true,
            "composites" : {
              "client" : {
                "realm-management" : [ "query-clients" ]
              }
            },
            "clientRole" : true,
            "containerId" : "7bb33dcf-6428-4464-8a42-13682bd0834e",
            "attributes" : { }
          } ],
          "security-admin-console" : [ ],
          "admin-cli" : [ ],
          "backend" : [ ],
          "account-console" : [ ],
          "broker" : [ {
            "id" : "25265f48-43be-4aa7-babc-f2ef0cd66246",
            "name" : "read-token",
            "description" : "${role_read-token}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "3ace63ef-73f7-4c39-a2e8-6e8916ae74ca",
            "attributes" : { }
          } ],
          "account" : [ {
            "id" : "eefe230d-0516-43ea-b411-cc744b7a4463",
            "name" : "view-profile",
            "description" : "${role_view-profile}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "dfd656bd-a700-4df4-9bc3-4d55a70197f1",
            "attributes" : { }
          }, {
            "id" : "7cfc1686-db79-442f-9fef-98377ec374d1",
            "name" : "manage-account",
            "description" : "${role_manage-account}",
            "composite" : true,
            "composites" : {
              "client" : {
                "account" : [ "manage-account-links" ]
              }
            },
            "clientRole" : true,
            "containerId" : "dfd656bd-a700-4df4-9bc3-4d55a70197f1",
            "attributes" : { }
          }, {
            "id" : "42d13087-2daf-4698-abdb-008e89e80bfb",
            "name" : "manage-account-links",
            "description" : "${role_manage-account-links}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "dfd656bd-a700-4df4-9bc3-4d55a70197f1",
            "attributes" : { }
          }, {
            "id" : "1009cff2-7268-4242-bf75-143588312764",
            "name" : "view-consent",
            "description" : "${role_view-consent}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "dfd656bd-a700-4df4-9bc3-4d55a70197f1",
            "attributes" : { }
          }, {
            "id" : "5962f3ba-debf-4129-802c-9827e1c8f8e3",
            "name" : "view-applications",
            "description" : "${role_view-applications}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "dfd656bd-a700-4df4-9bc3-4d55a70197f1",
            "attributes" : { }
          }, {
            "id" : "9d2e967a-4e56-44d1-b4bd-faa272e6fdf9",
            "name" : "view-groups",
            "description" : "${role_view-groups}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "dfd656bd-a700-4df4-9bc3-4d55a70197f1",
            "attributes" : { }
          }, {
            "id" : "0ee2143e-3962-4d35-be49-3dc1a95b3f4f",
            "name" : "delete-account",
            "description" : "${role_delete-account}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "dfd656bd-a700-4df4-9bc3-4d55a70197f1",
            "attributes" : { }
          }, {
            "id" : "a6c37596-df2c-41c8-b723-c8e375b8d711",
            "name" : "manage-consent",
            "description" : "${role_manage-consent}",
            "composite" : true,
            "composites" : {
              "client" : {
                "account" : [ "view-consent" ]
              }
            },
            "clientRole" : true,
            "containerId" : "dfd656bd-a700-4df4-9bc3-4d55a70197f1",
            "attributes" : { }
          } ],
          "frontend" : [ ]
        }
      },
      "groups" : [ ],
      "defaultRole" : {
        "id" : "ddee7bb3-b73f-453e-8bc5-e6b291b50e1f",
        "name" : "default-roles-betting-api",
        "description" : "${role_default-roles}",
        "composite" : true,
        "clientRole" : false,
        "containerId" : "59928225-ea63-495d-8997-be4b23922969"
      },
      "requiredCredentials" : [ "password" ],
      "otpPolicyType" : "totp",
      "otpPolicyAlgorithm" : "HmacSHA1",
      "otpPolicyInitialCounter" : 0,
      "otpPolicyDigits" : 6,
      "otpPolicyLookAheadWindow" : 1,
      "otpPolicyPeriod" : 30,
      "otpPolicyCodeReusable" : false,
      "otpSupportedApplications" : [ "totpAppGoogleName", "totpAppFreeOTPName" ],
      "webAuthnPolicyRpEntityName" : "keycloak",
      "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
      "webAuthnPolicyRpId" : "",
      "webAuthnPolicyAttestationConveyancePreference" : "not specified",
      "webAuthnPolicyAuthenticatorAttachment" : "not specified",
      "webAuthnPolicyRequireResidentKey" : "not specified",
      "webAuthnPolicyUserVerificationRequirement" : "not specified",
      "webAuthnPolicyCreateTimeout" : 0,
      "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
      "webAuthnPolicyAcceptableAaguids" : [ ],
      "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
      "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
      "webAuthnPolicyPasswordlessRpId" : "",
      "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
      "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
      "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
      "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
      "webAuthnPolicyPasswordlessCreateTimeout" : 0,
      "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
      "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
      "users" : [ {
        "id" : "0858669f-49f8-4084-9365-a1a126e80877",
        "createdTimestamp" : 1669121903243,
        "username" : "admin",
        "enabled" : true,
        "totp" : false,
        "emailVerified" : false,
        "firstName" : "",
        "lastName" : "",
        "credentials" : [ {
          "id" : "b86f9e92-a557-4596-b11a-80746e92e43f",
          "type" : "password",
          "userLabel" : "My password",
          "createdDate" : 1669121915519,
          "secretData" : "{\"value\":\"twnFFKeNREDvAQGVrarX12ssvO7q3dG8Kd6wjEc/YzX/bmQEjrJ1VklI0uH750ujre5wZG6ea/NOS4lWn3qlGA==\",\"salt\":\"foj2tyNzvnVNUlkaRY4GlQ==\",\"additionalParameters\":{}}",
          "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        } ],
        "disableableCredentialTypes" : [ ],
        "requiredActions" : [ ],
        "realmRoles" : [ "default-roles-betting-api", "ADMIN" ],
        "clientRoles" : {
          "realm-management" : [ "realm-admin", "impersonation", "query-realms", "create-client", "view-realm", "view-authorization", "view-events", "manage-events", "view-clients", "manage-users", "query-clients", "query-groups", "manage-realm", "view-identity-providers", "view-users", "manage-clients", "manage-authorization", "manage-identity-providers", "query-users" ],
          "broker" : [ "read-token" ],
          "account" : [ "manage-account", "manage-account-links", "view-groups", "delete-account", "view-profile", "view-applications", "view-consent", "manage-consent" ]
        },
        "notBefore" : 0,
        "groups" : [ ]
      }, {
        "id" : "c739c7dc-3b92-4e8e-ba29-473789b56bac",
        "createdTimestamp" : 1668674034668,
        "username" : "service-account-backend",
        "enabled" : true,
        "totp" : false,
        "emailVerified" : false,
        "serviceAccountClientId" : "backend",
        "credentials" : [ ],
        "disableableCredentialTypes" : [ ],
        "requiredActions" : [ ],
        "realmRoles" : [ "default-roles-betting-api" ],
        "notBefore" : 0,
        "groups" : [ ]
      } ],
      "scopeMappings" : [ {
        "clientScope" : "offline_access",
        "roles" : [ "offline_access" ]
      } ],
      "clientScopeMappings" : {
        "account" : [ {
          "client" : "account-console",
          "roles" : [ "manage-account", "view-groups" ]
        } ]
      },
      "clients" : [ {
        "id" : "dfd656bd-a700-4df4-9bc3-4d55a70197f1",
        "clientId" : "account",
        "name" : "${client_account}",
        "rootUrl" : "${authBaseUrl}",
        "baseUrl" : "/realms/betting-app/account/",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ "/realms/betting-app/account/*" ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "post.logout.redirect.uris" : "+"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "3b9ab260-13b2-47eb-a77b-07417ac76e30",
        "clientId" : "account-console",
        "name" : "${client_account-console}",
        "rootUrl" : "${authBaseUrl}",
        "baseUrl" : "/realms/betting-api/account/",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ "/realms/betting-api/account/*" ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "post.logout.redirect.uris" : "+",
          "pkce.code.challenge.method" : "S256"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "protocolMappers" : [ {
          "id" : "3a74f9d8-e637-4207-9bb3-eecd3d1d9748",
          "name" : "audience resolve",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-audience-resolve-mapper",
          "consentRequired" : false,
          "config" : { }
        } ],
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "252821cf-b1cf-42d1-a15d-06d2fe6ddf7b",
        "clientId" : "admin-cli",
        "name" : "${client_admin-cli}",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : false,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : true,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "post.logout.redirect.uris" : "+"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "a8a53793-9e8f-437f-9528-c539ae99ebaa",
        "clientId" : "backend",
        "name" : "",
        "description" : "",
        "rootUrl" : "",
        "adminUrl" : "",
        "baseUrl" : "",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "secret" : "xDexo0gzAq3DP6wDt6f96WpMvBAZJzVB",
        "redirectUris" : [ ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : false,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : true,
        "serviceAccountsEnabled" : true,
        "publicClient" : false,
        "frontchannelLogout" : true,
        "protocol" : "openid-connect",
        "attributes" : {
          "oidc.ciba.grant.enabled" : "false",
          "client.secret.creation.time" : "1668674034",
          "backchannel.logout.session.required" : "true",
          "post.logout.redirect.uris" : "+",
          "display.on.consent.screen" : "false",
          "oauth2.device.authorization.grant.enabled" : "false",
          "backchannel.logout.revoke.offline.tokens" : "false"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : true,
        "nodeReRegistrationTimeout" : -1,
        "protocolMappers" : [ {
          "id" : "6350b458-93c6-4a3b-bcdf-1c0c37e89bb9",
          "name" : "Client Host",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usersessionmodel-note-mapper",
          "consentRequired" : false,
          "config" : {
            "user.session.note" : "clientHost",
            "userinfo.token.claim" : "true",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "clientHost",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "2740643d-e303-4259-8678-9514e88b54b2",
          "name" : "Client IP Address",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usersessionmodel-note-mapper",
          "consentRequired" : false,
          "config" : {
            "user.session.note" : "clientAddress",
            "userinfo.token.claim" : "true",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "clientAddress",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "39aeeb19-92cc-4353-af9c-59e07318d4c4",
          "name" : "Client ID",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usersessionmodel-note-mapper",
          "consentRequired" : false,
          "config" : {
            "user.session.note" : "clientId",
            "userinfo.token.claim" : "true",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "clientId",
            "jsonType.label" : "String"
          }
        } ],
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "3ace63ef-73f7-4c39-a2e8-6e8916ae74ca",
        "clientId" : "broker",
        "name" : "${client_broker}",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : true,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : false,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "post.logout.redirect.uris" : "+"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "007ed113-29a4-4e8b-bc7e-b266538d2e65",
        "clientId" : "frontend",
        "name" : "",
        "description" : "",
        "rootUrl" : "http://betting-esport.me",
        "adminUrl" : "",
        "baseUrl" : "",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ "*" ],
        "webOrigins" : [ "*" ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : true,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : true,
        "protocol" : "openid-connect",
        "attributes" : {
          "oidc.ciba.grant.enabled" : "false",
          "backchannel.logout.session.required" : "true",
          "post.logout.redirect.uris" : "+",
          "display.on.consent.screen" : "false",
          "oauth2.device.authorization.grant.enabled" : "false",
          "backchannel.logout.revoke.offline.tokens" : "false"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : true,
        "nodeReRegistrationTimeout" : -1,
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "7bb33dcf-6428-4464-8a42-13682bd0834e",
        "clientId" : "realm-management",
        "name" : "${client_realm-management}",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : true,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : false,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "post.logout.redirect.uris" : "+"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "9766a9fa-b5e2-4764-bf34-ae65df6dd756",
        "clientId" : "security-admin-console",
        "name" : "${client_security-admin-console}",
        "rootUrl" : "${authAdminUrl}",
        "baseUrl" : "/admin/betting-app/console/",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ "/admin/betting-app/console/*" ],
        "webOrigins" : [ "+" ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "post.logout.redirect.uris" : "+",
          "pkce.code.challenge.method" : "S256"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "protocolMappers" : [ {
          "id" : "d102c446-046d-4cf3-8b0a-af33aab9f1a4",
          "name" : "locale",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "locale",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "locale",
            "jsonType.label" : "String"
          }
        } ],
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      } ],
      "clientScopes" : [ {
        "id" : "f707470a-f83f-4fe1-8e02-51b7ff46b9cb",
        "name" : "email",
        "description" : "OpenID Connect built-in scope: email",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "display.on.consent.screen" : "true",
          "consent.screen.text" : "${emailScopeConsentText}"
        },
        "protocolMappers" : [ {
          "id" : "20996a0e-0f86-412f-a155-8f1a64f94d7b",
          "name" : "email verified",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "emailVerified",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "email_verified",
            "jsonType.label" : "boolean"
          }
        }, {
          "id" : "1ba2c1dd-0274-435e-a1bc-36c78c230cc2",
          "name" : "email",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "email",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "email",
            "jsonType.label" : "String"
          }
        } ]
      }, {
        "id" : "48c5af37-649f-4c9a-9193-e35121dc039c",
        "name" : "phone",
        "description" : "OpenID Connect built-in scope: phone",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "display.on.consent.screen" : "true",
          "consent.screen.text" : "${phoneScopeConsentText}"
        },
        "protocolMappers" : [ {
          "id" : "676dfab8-f995-4a6b-a32c-74accd502b9e",
          "name" : "phone number",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "phoneNumber",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "phone_number",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "63ef3e9a-508f-4c1c-88de-b76a3c8a5318",
          "name" : "phone number verified",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "phoneNumberVerified",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "phone_number_verified",
            "jsonType.label" : "boolean"
          }
        } ]
      }, {
        "id" : "6751a1ad-843c-4d3a-b68d-f6e0b23a3b6b",
        "name" : "web-origins",
        "description" : "OpenID Connect scope for add allowed web origins to the access token",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "display.on.consent.screen" : "false",
          "consent.screen.text" : ""
        },
        "protocolMappers" : [ {
          "id" : "c09a89cd-008b-4b9b-96ac-cc3f3edce0ed",
          "name" : "allowed web origins",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-allowed-origins-mapper",
          "consentRequired" : false,
          "config" : { }
        } ]
      }, {
        "id" : "f7a75f4c-dde4-4dbc-b323-00d5ba1e16f5",
        "name" : "offline_access",
        "description" : "OpenID Connect built-in scope: offline_access",
        "protocol" : "openid-connect",
        "attributes" : {
          "consent.screen.text" : "${offlineAccessScopeConsentText}",
          "display.on.consent.screen" : "true"
        }
      }, {
        "id" : "758ff278-9ea7-433a-9663-494d2cbee579",
        "name" : "profile",
        "description" : "OpenID Connect built-in scope: profile",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "display.on.consent.screen" : "true",
          "consent.screen.text" : "${profileScopeConsentText}"
        },
        "protocolMappers" : [ {
          "id" : "380665d4-cec6-476d-8c39-c8351d053749",
          "name" : "gender",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "gender",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "gender",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "241ac2f7-b7cb-406d-8374-94d78f0f6830",
          "name" : "profile",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "profile",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "profile",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "3312f6b5-01ee-4238-917a-2d0925570351",
          "name" : "middle name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "middleName",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "middle_name",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "314bcd55-c848-4e64-87f7-3fe59cc80105",
          "name" : "locale",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "locale",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "locale",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "ac6c6670-0929-4832-9c2f-505bbf6347da",
          "name" : "birthdate",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "birthdate",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "birthdate",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "e4993513-2a9b-4803-997c-893ee0f713f3",
          "name" : "nickname",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "nickname",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "nickname",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "590bab28-ec9b-4e04-9cb1-a656e2c01be2",
          "name" : "picture",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "picture",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "picture",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "ef85d1f6-f110-4a8e-a704-65400ceb9014",
          "name" : "full name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-full-name-mapper",
          "consentRequired" : false,
          "config" : {
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "userinfo.token.claim" : "true"
          }
        }, {
          "id" : "4d8f6ead-8917-4e24-83c1-d1089a9d00eb",
          "name" : "updated at",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "updatedAt",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "updated_at",
            "jsonType.label" : "long"
          }
        }, {
          "id" : "4ecf66dc-b8ea-4960-8336-069ff64347a4",
          "name" : "given name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "firstName",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "given_name",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "087837d2-fa4d-47fc-ba60-391dddf6764c",
          "name" : "website",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "website",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "website",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "218aee9d-4e57-4087-97e1-1952738c6c11",
          "name" : "family name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "lastName",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "family_name",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "2466b782-1284-41f0-990d-fd64c373b34e",
          "name" : "username",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "username",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "preferred_username",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "b8a45475-8fa9-4a87-b5cb-5c0573d9d8a9",
          "name" : "zoneinfo",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "zoneinfo",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "zoneinfo",
            "jsonType.label" : "String"
          }
        } ]
      }, {
        "id" : "36fd3a86-2e99-41ae-a3c7-d894e76b9dce",
        "name" : "roles",
        "description" : "OpenID Connect scope for add user roles to the access token",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "display.on.consent.screen" : "true",
          "consent.screen.text" : "${rolesScopeConsentText}"
        },
        "protocolMappers" : [ {
          "id" : "87fd318b-931e-434c-8a82-d265224ea991",
          "name" : "audience resolve",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-audience-resolve-mapper",
          "consentRequired" : false,
          "config" : { }
        }, {
          "id" : "ec31eb85-ffa1-4744-8381-42e109f320b2",
          "name" : "client roles",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-client-role-mapper",
          "consentRequired" : false,
          "config" : {
            "user.attribute" : "foo",
            "access.token.claim" : "true",
            "claim.name" : "resource_access.${client_id}.roles",
            "jsonType.label" : "String",
            "multivalued" : "true"
          }
        }, {
          "id" : "8c0ef8d1-de9f-40d3-8cda-2cb9891e843e",
          "name" : "realm roles",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-realm-role-mapper",
          "consentRequired" : false,
          "config" : {
            "user.attribute" : "foo",
            "access.token.claim" : "true",
            "claim.name" : "realm_access.roles",
            "jsonType.label" : "String",
            "multivalued" : "true"
          }
        } ]
      }, {
        "id" : "318c690b-acd9-436d-9bfb-0e106f7a7b10",
        "name" : "role_list",
        "description" : "SAML role list",
        "protocol" : "saml",
        "attributes" : {
          "consent.screen.text" : "${samlRoleListScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "3d0e1300-a951-46db-8494-4d87834740e3",
          "name" : "role list",
          "protocol" : "saml",
          "protocolMapper" : "saml-role-list-mapper",
          "consentRequired" : false,
          "config" : {
            "single" : "false",
            "attribute.nameformat" : "Basic",
            "attribute.name" : "Role"
          }
        } ]
      }, {
        "id" : "70478aa4-8573-4cc2-8a91-78e3d8703461",
        "name" : "address",
        "description" : "OpenID Connect built-in scope: address",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "display.on.consent.screen" : "true",
          "consent.screen.text" : "${addressScopeConsentText}"
        },
        "protocolMappers" : [ {
          "id" : "07efb383-8292-44d7-8b93-883fd91e2606",
          "name" : "address",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-address-mapper",
          "consentRequired" : false,
          "config" : {
            "user.attribute.formatted" : "formatted",
            "user.attribute.country" : "country",
            "user.attribute.postal_code" : "postal_code",
            "userinfo.token.claim" : "true",
            "user.attribute.street" : "street",
            "id.token.claim" : "true",
            "user.attribute.region" : "region",
            "access.token.claim" : "true",
            "user.attribute.locality" : "locality"
          }
        } ]
      }, {
        "id" : "8d170c5f-ec4d-4e2c-b699-a649c69a2ade",
        "name" : "acr",
        "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "display.on.consent.screen" : "false"
        },
        "protocolMappers" : [ {
          "id" : "a2ee5d53-8232-400e-8e6c-b6e77bc41347",
          "name" : "acr loa level",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-acr-mapper",
          "consentRequired" : false,
          "config" : {
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "userinfo.token.claim" : "true"
          }
        } ]
      }, {
        "id" : "de1602cd-bdd8-4ce4-b301-f4fc122acced",
        "name" : "microprofile-jwt",
        "description" : "Microprofile - JWT built-in scope",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "display.on.consent.screen" : "false"
        },
        "protocolMappers" : [ {
          "id" : "5bc12a95-a331-4f5a-ab2f-5e475fd602a4",
          "name" : "groups",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-realm-role-mapper",
          "consentRequired" : false,
          "config" : {
            "multivalued" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "foo",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "groups",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "a5e0b4b4-4bab-4dcf-9553-8626b05fc6dd",
          "name" : "upn",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "username",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "upn",
            "jsonType.label" : "String"
          }
        } ]
      } ],
      "defaultDefaultClientScopes" : [ "role_list", "roles", "web-origins", "profile", "acr", "email" ],
      "defaultOptionalClientScopes" : [ "phone", "address", "microprofile-jwt", "offline_access" ],
      "browserSecurityHeaders" : {
        "contentSecurityPolicyReportOnly" : "",
        "xContentTypeOptions" : "nosniff",
        "xRobotsTag" : "none",
        "xFrameOptions" : "SAMEORIGIN",
        "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "xXSSProtection" : "1; mode=block",
        "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
      },
      "smtpServer" : {
        "replyToDisplayName" : "",
        "starttls" : "true",
        "auth" : "true",
        "envelopeFrom" : "",
        "ssl" : "false",
        "password" : "qozypggfdkoiepmj",
        "port" : "587",
        "host" : "smtp.gmail.com",
        "replyTo" : "",
        "from" : "keycloak.verif@gmail.com",
        "fromDisplayName" : "",
        "user" : "keycloak.verif@gmail.com"
      },
      "loginTheme" : "keycloak",
      "accountTheme" : "",
      "adminTheme" : "",
      "emailTheme" : "",
      "eventsEnabled" : false,
      "eventsListeners" : [ "jboss-logging" ],
      "enabledEventTypes" : [ ],
      "adminEventsEnabled" : false,
      "adminEventsDetailsEnabled" : false,
      "identityProviders" : [ ],
      "identityProviderMappers" : [ ],
      "components" : {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
          "id" : "8da0f47d-8417-4c41-80f3-7a179299efc3",
          "name" : "Consent Required",
          "providerId" : "consent-required",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : { }
        }, {
          "id" : "5b58658c-899e-479c-9d93-65a1b5c5f63f",
          "name" : "Max Clients Limit",
          "providerId" : "max-clients",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "max-clients" : [ "200" ]
          }
        }, {
          "id" : "3f7bc581-c606-4ff6-8d86-2ee4a95fc026",
          "name" : "Allowed Protocol Mapper Types",
          "providerId" : "allowed-protocol-mappers",
          "subType" : "authenticated",
          "subComponents" : { },
          "config" : {
            "allowed-protocol-mapper-types" : [ "saml-user-property-mapper", "oidc-usermodel-property-mapper", "saml-role-list-mapper", "oidc-full-name-mapper", "oidc-usermodel-attribute-mapper", "saml-user-attribute-mapper", "oidc-address-mapper", "oidc-sha256-pairwise-sub-mapper" ]
          }
        }, {
          "id" : "f8fcf1c7-9e9b-429e-aca0-8fa1f2b4fb10",
          "name" : "Allowed Client Scopes",
          "providerId" : "allowed-client-templates",
          "subType" : "authenticated",
          "subComponents" : { },
          "config" : {
            "allow-default-scopes" : [ "true" ]
          }
        }, {
          "id" : "df4bc51e-34ae-4382-9c65-c1eb165c17e5",
          "name" : "Full Scope Disabled",
          "providerId" : "scope",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : { }
        }, {
          "id" : "47d716a2-06b2-4715-b0bc-5d9434ad8ef7",
          "name" : "Trusted Hosts",
          "providerId" : "trusted-hosts",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "host-sending-registration-request-must-match" : [ "true" ],
            "client-uris-must-match" : [ "true" ]
          }
        }, {
          "id" : "8d5f3022-22be-4e62-aff5-0a2eb27d7232",
          "name" : "Allowed Protocol Mapper Types",
          "providerId" : "allowed-protocol-mappers",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "allowed-protocol-mapper-types" : [ "oidc-full-name-mapper", "oidc-address-mapper", "saml-user-property-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-attribute-mapper", "saml-role-list-mapper", "oidc-usermodel-property-mapper", "saml-user-attribute-mapper" ]
          }
        }, {
          "id" : "a4d39dcd-7201-4487-ae93-55ebb2ac87ae",
          "name" : "Allowed Client Scopes",
          "providerId" : "allowed-client-templates",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "allow-default-scopes" : [ "true" ]
          }
        } ],
        "org.keycloak.userprofile.UserProfileProvider" : [ {
          "id" : "c06f562e-eb08-45ac-a44d-6880862b17bf",
          "providerId" : "declarative-user-profile",
          "subComponents" : { },
          "config" : { }
        } ],
        "org.keycloak.keys.KeyProvider" : [ {
          "id" : "a53f23b3-8671-482d-97c0-29a3bd80e92c",
          "name" : "rsa-enc-generated",
          "providerId" : "rsa-enc-generated",
          "subComponents" : { },
          "config" : {
            "privateKey" : [ "MIIEpAIBAAKCAQEAk9XVUqC5DDJAp0e75XJkOl3uWCZi7nkkRmBlDTgKnyRHOoRrJTgsDoi0Dk54AHa+RkmOBGEtCQtO4S+5gJrtkHQkphLzO8469qy2LqvdXWxJqRam1m1T4ySRxizk9rzsTnqo7Z09xN80NaHxMogkN9GScHJByYaxKtU7B9vRVCs4VzgXu9+eO0hd+x1zPpJI79OIcAYy7hlbrCwPc+ITX5JYkae1JProbH0mkF3O9kYk5bxiLjxqjMyBpRy6AtyO1vsT695np/BwxTzHzNcp55+KulMVnsTtUpysqhztIOqXi6x9CaFPgRTJssJzvdakXaeHRLWOdgUyQ+7Jq28d1wIDAQABAoIBACIaz5a7S1Vb9nxg2SEKrcKlTsn5OROI0OyHamiNSC4EgYYnbExu1AMaWGeAhMCepDC04VVzUZ9ng3ABwYrAsxODJ71EW+atIf8sQu8raOsXgzrF5gFLwXGCSzrrunqNhPpp47TFdK2JTJMe4/TjYW+bImxcf37NWuvluzOJ65W99NKsyiX01RVwvS2wDG11qDsN+lnLGN0Mtloz2K9/n9TfWr65uyzSECzxdVabxuYaQWDSHPWsJ/fc+sMjtJWPlfQkK4cynV+iWav91dgvYnSXNPcC4bshlVzmszv3CAjVDVplf2hD99YNq1MyKBfuj02rOBPxUrNy6iQ9nNc+wXECgYEAz7NMenfhbFOHzs5j8RCWCxBi39L/zHMcsI842F868qQdgy8jwSop/zlVndX2/M1a+wAB5Hy1Cu72+HvcqvVZgxriGyHeP6UwIK1/g/+TD4WuD5iQBfMxlwjylxHmN0Chz6Rr5MD8qmntxP6UiKlXhPuCq/z1a0rBxSuF5xA05vkCgYEAtjat8yI/Q+ZVNveJTNnhhxfWkUjUcFUiKq7I79/V7FokoawPuy3p7979b39w+MSB2nMWlvXMS1B4nhIP22vseYurQYHZeSEdloIvMDpKGmq4Ttmh/yk1SVfemy3xHlnXD2anXEvnnE1cd6SPQeQCG28sS01H1tMwGKsH7eK9T08CgYEAmhL/4LmdV6Z/UEJ6kREkvQBi2HbFmvypg7A7EwdRyz1DR1VoyJpmnRYDFRrsJYyQuTHANabtBjdOrfX0ND3dMQx4PnhZTg1ULmmF9n1YsmMQRDGAZWmKl+fjTX3RsZsYbdgi0Yb359K8ty3DMb2tVtDclokH5ZeHNqSaqFW1aMECgYBgkwSJG7qqUzcRBguYVtaIkmLf59jonMaaFr9bG6i3N2O46IgB7ijSQL7UTJhk0Un9rQfpBOe9dy4moW4UHtRb62HeO2M3Jw0Wi3NVPV+vNqbu67xHj+C1OcQ7PRNRwc4RVJgZfAWKuxnqM6bWBnHzdm3kj1YnDxGr0WJHe+hYUwKBgQDEea2x1czt5ZW+rhVlHMJt/AWp9nCwXKVJ4ukFcrp7EXVvl4lE/k97RnoQKZFweNuU0VRvZaAYxhp+5QdtmPY8bxMd0HJV/xJpMUocwzgqOM9mBgo6jtFc1HrhOxNfWLI8RZFALhNrgmjgHzw6i8RSnG/iPtns1Svsw5nSSLh0Og==" ],
            "keyUse" : [ "ENC" ],
            "certificate" : [ "MIICpTCCAY0CBgGEhKDWaTANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtiZXR0aW5nLWFwaTAeFw0yMjExMTcwODA1NDRaFw0zMjExMTcwODA3MjRaMBYxFDASBgNVBAMMC2JldHRpbmctYXBpMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAk9XVUqC5DDJAp0e75XJkOl3uWCZi7nkkRmBlDTgKnyRHOoRrJTgsDoi0Dk54AHa+RkmOBGEtCQtO4S+5gJrtkHQkphLzO8469qy2LqvdXWxJqRam1m1T4ySRxizk9rzsTnqo7Z09xN80NaHxMogkN9GScHJByYaxKtU7B9vRVCs4VzgXu9+eO0hd+x1zPpJI79OIcAYy7hlbrCwPc+ITX5JYkae1JProbH0mkF3O9kYk5bxiLjxqjMyBpRy6AtyO1vsT695np/BwxTzHzNcp55+KulMVnsTtUpysqhztIOqXi6x9CaFPgRTJssJzvdakXaeHRLWOdgUyQ+7Jq28d1wIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBJuxiHNHhVkxxUh1iinfz7AzefFs2VCG3LBXQJ0aG1W1lACwcnMmaYF9qLUHD1ZoByFZhoVn8gIYQU4an64emtUZGiR4XK8lvSIzx8fKqdlqek8gyQHuML1MSgO36n4ZlofqftEBlAacFUukgNeU3R31Zmv3DXuTM8xmUx7G64K7Mu+gbrDECuMZ5z+Ngx20wVHVqTVU9k12AwLXRa1PwcHtIPimsd+CRCqslANwk/JfoynqyE79r6zYCadkd1Movf7KwErffgRPL4SB2nIGjJICaT4tMfYs8u94jXaKUT0h7hhHn+c3s3cG/73hlodmF5RMcV2bnxH7L1/Pozqslj" ],
            "priority" : [ "100" ],
            "algorithm" : [ "RSA-OAEP" ]
          }
        }, {
          "id" : "4cb38ebc-a3e3-4096-beff-69a89dc6cc2c",
          "name" : "rsa-generated",
          "providerId" : "rsa-generated",
          "subComponents" : { },
          "config" : {
            "privateKey" : [ "MIIEowIBAAKCAQEAoXJTlgi9azyuiSE4K8zm2aX4mNFBvTKlKq/xFGr6ewPHRbUK5QmaIQSDzA5mGWbITX4fiK2KlRwVTSbZxkB6+3EQyw1EF5Kduxv7dHIkBPWETKw0M1VwFWMfhHEsOu6kpQV0m/hU3OnBgVx8nXpL8o0MCDIU/EEQMda1bSOz8TvhYGjNrueWXPxSfyoaTwcHay9A1mwOq6TxccJ/huncqjkMDqnBleZHSPnGy+gOHHxTH85Q6h1QHQTduwTdXk7lpMbTX6foD4DQrzJDHGoM65Y5Hx/6oAa1i8aDq7lz4l57DQo4HUTA0QwiPkgS+u8oDJsJnlM4wS1IF2g0zNNOiwIDAQABAoIBADT7MskC1z6Q7GoeF7PwCzYTzHBCA8PWEfPfR0s/DDJAfC25Cvk83HLHa4UUmJbvbv5XTHvrD5Z9X9Qw0rjHwlQvt6YbFWRy/gZAWZXOO1nRRHhw7rSF7kFmhRpOlYhFdoydLLZemWLh51nPgymez7uqY+9wmAhsRadFYcaON+gLDCtpQRF4dNSiSnasonCosM1zZhtaCdFVdA/Dw6gm6ncjgNFRFaqd/4fL9gfsYrvN7nzdy3taB0MsocX0HZ5bNkNrHx1UKlNJh9iV5CB1VEe2cAIe29vMdSpBIR4minNH3wUQFJfZwo29PIhlob+Oda32wK4Tezx4AqrOwGoDF2kCgYEAzXIMm20E/iR9mz7Z1RDhY/wp91VNlwDowBqzxpvXJYqvpEHRP6WJWZZpZTtlSFnODo6qRtGjOUgY9/S9c3D6jl7bHfDTbcnGDwh3TaZwCRTuw+1VTcLSJvUmkYYJiBBRH/xKF2TWNYTHDYZeXlnQhvJYNPy1UGlk+tvnECZp+28CgYEAySyVoo3znMpXnOwGypDfPOwn0sMShtCt0iwT1e1W+/I+7aQLBkf5TDwA1O5EP+Vbw5NQ0JP9RBW8MMfpN7zr62ZUC4LDrLBDlL1QSWKtH8M+WEZ1AkXdkc4+lgONm/oE2nQFa3wRJchHYwuQ4gaLIppwvr5ZV43d/9pAStyfwKUCgYEAiynLImlJrYE4WDXNxocFtf20y6ZLxZLHFoG/7zPXG8YCzggLXsqZ7EZ3pCwEomq6qp+29fvBTebpiuSMhCsufcwBLxnXjhHUiJBaiA3K7EvypGMamm7yfZMoCgE6aaFr4ne6FHiopV4Im7++IrlCCHcWiuX3R73sugTFUupCdh8CgYBYHeFFHGxShwatQ20OGTrPEpm25Z8d0hXw80GU+KqbHNaXfL0feTMnQzkSC3N1kV8KYWKKmefbhLGzpDzxHx0vNNknWZWf9G0Fn46lNkWingCW5fWmkzej//TF/LRwV6j8jsk49VUFeZ5bMdu6RSd4drFfuzyi7w8IXG7A27ZVyQKBgCcIeTo2MTLWBDxpxSZgxJqrOOMXbxWqUlm/DiS3PdhXTrZGMrXAxFnHZfWrgortxbK6g8+yoztKGWewgFQOeRQdnX2KAn4aVDHboNemTL1pMsrHRvTznVRB2nkkRraxhkDf1v0RanWebC4cv2kOV6o3J+h0SBIHkN60S2i1o2IQ" ],
            "keyUse" : [ "SIG" ],
            "certificate" : [ "MIICpTCCAY0CBgGEhKDVKTANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtiZXR0aW5nLWFwaTAeFw0yMjExMTcwODA1NDNaFw0zMjExMTcwODA3MjNaMBYxFDASBgNVBAMMC2JldHRpbmctYXBpMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoXJTlgi9azyuiSE4K8zm2aX4mNFBvTKlKq/xFGr6ewPHRbUK5QmaIQSDzA5mGWbITX4fiK2KlRwVTSbZxkB6+3EQyw1EF5Kduxv7dHIkBPWETKw0M1VwFWMfhHEsOu6kpQV0m/hU3OnBgVx8nXpL8o0MCDIU/EEQMda1bSOz8TvhYGjNrueWXPxSfyoaTwcHay9A1mwOq6TxccJ/huncqjkMDqnBleZHSPnGy+gOHHxTH85Q6h1QHQTduwTdXk7lpMbTX6foD4DQrzJDHGoM65Y5Hx/6oAa1i8aDq7lz4l57DQo4HUTA0QwiPkgS+u8oDJsJnlM4wS1IF2g0zNNOiwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQByRWN3SicHRZN/ucOQ6dlgWj3Ez67t1flg9EzsnJ/533nt8CL7PURWHaX/aafOHC53X69/vlOdsou9o/BH9Z3I3d6YnYx/oCunO2WqMPDfOr4ZMKutenLZcB24i94oyXoPBu6UxTRGaaRa5r1puiKK1THYENp6EilJDx08xkLNVVTidKIUq1vJnYgDYo14NurO4APjFqJnrOXrsrbm4u+gEslH7wmqUljb9QNvoyNPgcfwXNYsGi7rLmq79ZNaC/GhgWuWz9ye/ONq7/Bo5oChIQdpIDOyBS9WLXsGYTaGTIF5L3w9fF+vfovzw4+AbqYEF+Acf0dmnyQIpASI8EsU" ],
            "priority" : [ "100" ]
          }
        }, {
          "id" : "a6629cfd-92f1-4ebb-876d-cf426e76377c",
          "name" : "hmac-generated",
          "providerId" : "hmac-generated",
          "subComponents" : { },
          "config" : {
            "kid" : [ "e0f29db7-2632-4800-a5e4-b93001d3cde2" ],
            "secret" : [ "eTFx6fPI6Cs0dVzbgLbl5njFqcD2BihQ0Z-9ELUDpcdpATZaxPjWznfQQETiicv7Lp-CNEa2RqjscLrjU7RMIw" ],
            "priority" : [ "100" ],
            "algorithm" : [ "HS256" ]
          }
        }, {
          "id" : "389636c8-e843-4fe5-9ff1-bc284da464ba",
          "name" : "aes-generated",
          "providerId" : "aes-generated",
          "subComponents" : { },
          "config" : {
            "kid" : [ "62e446c5-e9e5-4bfc-9424-73879c2dedd2" ],
            "secret" : [ "Ss9_Ywbc-azRCAXfiGpD0g" ],
            "priority" : [ "100" ]
          }
        } ]
      },
      "internationalizationEnabled" : false,
      "supportedLocales" : [ ],
      "authenticationFlows" : [ {
        "id" : "b5268e0b-e0cd-4cd3-819e-462c59de25cd",
        "alias" : "Account verification options",
        "description" : "Method with which to verity the existing account",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "idp-email-verification",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Verify Existing Account by Re-authentication",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "27588544-3ce2-44d1-b510-d3be04ea2ce0",
        "alias" : "Authentication Options",
        "description" : "Authentication options.",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "basic-auth",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "basic-auth-otp",
          "authenticatorFlow" : false,
          "requirement" : "DISABLED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "auth-spnego",
          "authenticatorFlow" : false,
          "requirement" : "DISABLED",
          "priority" : 30,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "1937e20b-44a9-4363-b3ee-85f127c6f7c9",
        "alias" : "Browser - Conditional OTP",
        "description" : "Flow to determine if the OTP is required for the authentication",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "auth-otp-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "8eca4cd0-cef2-45f5-a5d8-25b8ac99a4a0",
        "alias" : "Direct Grant - Conditional OTP",
        "description" : "Flow to determine if the OTP is required for the authentication",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "direct-grant-validate-otp",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "ed1911f4-aa1b-43c2-a035-bad9b6574dd4",
        "alias" : "First broker login - Conditional OTP",
        "description" : "Flow to determine if the OTP is required for the authentication",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "auth-otp-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "7d3faee7-2b6a-4520-88c0-afec5b37b896",
        "alias" : "Handle Existing Account",
        "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "idp-confirm-link",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Account verification options",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "834c69ba-bec6-48fd-beb5-0296c6d8acdb",
        "alias" : "Reset - Conditional OTP",
        "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "reset-otp",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "716e3ce4-0385-4a83-a5fa-e694dccc835d",
        "alias" : "User creation or linking",
        "description" : "Flow for the existing/non-existing user alternatives",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticatorConfig" : "create unique user config",
          "authenticator" : "idp-create-user-if-unique",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Handle Existing Account",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "9a62e135-2a6c-41c0-8e61-13b15e5d518e",
        "alias" : "Verify Existing Account by Re-authentication",
        "description" : "Reauthentication of existing account",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "idp-username-password-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "First broker login - Conditional OTP",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "13bc8b0a-fe1b-4291-85b6-1f3a8b731832",
        "alias" : "browser",
        "description" : "browser based authentication",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "auth-cookie",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "auth-spnego",
          "authenticatorFlow" : false,
          "requirement" : "DISABLED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "identity-provider-redirector",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 25,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "ALTERNATIVE",
          "priority" : 30,
          "autheticatorFlow" : true,
          "flowAlias" : "forms",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "919919a1-b867-4c4b-9064-588e392bd768",
        "alias" : "clients",
        "description" : "Base authentication for clients",
        "providerId" : "client-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "client-secret",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "client-jwt",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "client-secret-jwt",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 30,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "client-x509",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 40,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "6d954952-ddaf-4500-8829-6cbd0fd009be",
        "alias" : "direct grant",
        "description" : "OpenID Connect Resource Owner Grant",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "direct-grant-validate-username",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "direct-grant-validate-password",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 30,
          "autheticatorFlow" : true,
          "flowAlias" : "Direct Grant - Conditional OTP",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "c9ba0680-edd5-471c-b351-5eb847a36e10",
        "alias" : "docker auth",
        "description" : "Used by Docker clients to authenticate against the IDP",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "docker-http-basic-authenticator",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "40cadb8b-fda4-4e25-a753-5c477afe7513",
        "alias" : "first broker login",
        "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticatorConfig" : "review profile config",
          "authenticator" : "idp-review-profile",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "User creation or linking",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "fd4abf96-dc40-4888-a04a-cc34246186f5",
        "alias" : "forms",
        "description" : "Username, password, otp and other auth forms.",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "auth-username-password-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Browser - Conditional OTP",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "6f825103-22d9-463c-8143-63bcb7b62024",
        "alias" : "http challenge",
        "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "no-cookie-redirect",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Authentication Options",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "362f60f4-6e23-49d3-bf6d-0e498bff64c7",
        "alias" : "registration",
        "description" : "registration flow",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "registration-page-form",
          "authenticatorFlow" : true,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : true,
          "flowAlias" : "registration form",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "3d522ba4-5dec-46ff-88b9-ca1277d0bde4",
        "alias" : "registration form",
        "description" : "registration form",
        "providerId" : "form-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "registration-user-creation",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "registration-profile-action",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 40,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "registration-password-action",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 50,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "registration-recaptcha-action",
          "authenticatorFlow" : false,
          "requirement" : "DISABLED",
          "priority" : 60,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "df709538-b24f-436e-bbf1-ed979df7a9f7",
        "alias" : "reset credentials",
        "description" : "Reset credentials for a user if they forgot their password or something",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "reset-credentials-choose-user",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "reset-credential-email",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "reset-password",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 30,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 40,
          "autheticatorFlow" : true,
          "flowAlias" : "Reset - Conditional OTP",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "4596142f-1f98-43b8-a834-4eb7d9ee29b6",
        "alias" : "saml ecp",
        "description" : "SAML ECP Profile Authentication Flow",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "http-basic-authenticator",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      } ],
      "authenticatorConfig" : [ {
        "id" : "4d913a0f-e6cd-42d8-81f8-ff7e2f9fb8ac",
        "alias" : "create unique user config",
        "config" : {
          "require.password.update.after.registration" : "false"
        }
      }, {
        "id" : "b3a3ce77-4eb5-45d6-91f5-c243d432d439",
        "alias" : "review profile config",
        "config" : {
          "update.profile.on.first.login" : "missing"
        }
      } ],
      "requiredActions" : [ {
        "alias" : "CONFIGURE_TOTP",
        "name" : "Configure OTP",
        "providerId" : "CONFIGURE_TOTP",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 10,
        "config" : { }
      }, {
        "alias" : "terms_and_conditions",
        "name" : "Terms and Conditions",
        "providerId" : "terms_and_conditions",
        "enabled" : false,
        "defaultAction" : false,
        "priority" : 20,
        "config" : { }
      }, {
        "alias" : "UPDATE_PASSWORD",
        "name" : "Update Password",
        "providerId" : "UPDATE_PASSWORD",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 30,
        "config" : { }
      }, {
        "alias" : "UPDATE_PROFILE",
        "name" : "Update Profile",
        "providerId" : "UPDATE_PROFILE",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 40,
        "config" : { }
      }, {
        "alias" : "VERIFY_EMAIL",
        "name" : "Verify Email",
        "providerId" : "VERIFY_EMAIL",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 50,
        "config" : { }
      }, {
        "alias" : "delete_account",
        "name" : "Delete Account",
        "providerId" : "delete_account",
        "enabled" : false,
        "defaultAction" : false,
        "priority" : 60,
        "config" : { }
      }, {
        "alias" : "webauthn-register",
        "name" : "Webauthn Register",
        "providerId" : "webauthn-register",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 70,
        "config" : { }
      }, {
        "alias" : "webauthn-register-passwordless",
        "name" : "Webauthn Register Passwordless",
        "providerId" : "webauthn-register-passwordless",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 80,
        "config" : { }
      }, {
        "alias" : "update_user_locale",
        "name" : "Update User Locale",
        "providerId" : "update_user_locale",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 1000,
        "config" : { }
      } ],
      "browserFlow" : "browser",
      "registrationFlow" : "registration",
      "directGrantFlow" : "direct grant",
      "resetCredentialsFlow" : "reset credentials",
      "clientAuthenticationFlow" : "clients",
      "dockerAuthenticationFlow" : "docker auth",
      "attributes" : {
        "cibaBackchannelTokenDeliveryMode" : "poll",
        "cibaAuthRequestedUserHint" : "login_hint",
        "clientOfflineSessionMaxLifespan" : "0",
        "oauth2DevicePollingInterval" : "5",
        "clientSessionIdleTimeout" : "0",
        "clientOfflineSessionIdleTimeout" : "0",
        "cibaInterval" : "5",
        "realmReusableOtpCode" : "false",
        "cibaExpiresIn" : "120",
        "oauth2DeviceCodeLifespan" : "600",
        "parRequestUriLifespan" : "60",
        "clientSessionMaxLifespan" : "0",
        "frontendUrl" : "",
        "acr.loa.map" : "{}"
      },
      "keycloakVersion" : "20.0.1",
      "userManagedAccessAllowed" : false,
      "clientProfiles" : {
        "profiles" : [ ]
      },
      "clientPolicies" : {
        "policies" : [ ]
      }
    }